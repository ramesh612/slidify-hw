q()
library(xlsx)
library(rJava)
q()
q()
q()
q()
library(data.table)
install.packages("data.table")
library(data.table)
DF = data.frame(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
DF
rnmorm(9)
rnorm(9)
?rnorm
rep(c("a", "b", "c"), each=3)
head(DF, 3)
DT = data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT, 3)
tables()
DF
DT
tables()
DT[2,]
DT
DT[2,]
DT[DT$Y == "a"]
DT[DT$Y == "a",]
DT
DF
DT[2,]
DT$y
DT[DT$y == "a",]
DT[c(2,3)]
DT[,c(2,3)]
DT[,1]
DT[,x]
DT[,y]
DT[,z]
DT[,1]
DT[,c(2,3)]
{
x = 1
y = 2
}
k = {print(10); 5}
print(k)
DT[,list(mean(x), sum(z)]
DT[,list(mean(x), sum(z))]
DT
mean(DT$x)
sum(DT$z)
table(y)
DT[,table(y)]
DT[,w:=z^2]
DT
DT2 <- DT
DT[, y := 2]
DT[, y:= 2]
DT[, y:= 2]
DT
DT2
head(DT, n=3)
head(DT2, n=3)
DT[,m:= {tmp <- (x+z); log2(tmp+5)}]
DT
DT[,a:=x>0]
DT
DT[,b:= mean(x+w),by=a]
DT
set.seed(123)
DT <- data.table(x=sample(letters[1:3], 1E5, TRUE))
DT
DT[, .N, by=x]
DT <- data.table(x=rep(c("a","b","c"),each=100), y=rnorm(300))
DT
setkey(DT,x)
DT
DT['a']
DT['b']
DT['c']
DT1 <- data.table(x=c('a', 'a', 'b', 'dt1'), y=1:4)
DT1
DT2 <- data.table(x=c('a', 'b', 'dt2'), z=5:7)
DT2
setkey(DT1, x); setkey(DT2, x)
merge(DT1, DT2)
big_df <- data.frame(x=rnorm(1E6), y=rnorm(1E6))
big_df
file <- tempfile()
write.table(big_df, file=file, row.names=FALSE, col.names=TRUE, sep="\t", quote=FALSE)
system.time(fread(file))
system.time(read.table(file, header=TRUE, sep="\t"))
q()
q()
library(swirl)
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
q()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrows=4, ncols=5)
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames, my_data)
?colnames
colnames(my_data) <- cnames
my_data
install_from_swirl("Data Analysis")
swirl()
q()
q()
getwd()
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse("GettingAndCleaningData/data/Quiz1/data1.xml",useInternal=TRUE)
doc
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xpathSApply(rootNode, "//zipcode", xmlValue)
rs <- xpathSApply(rootNode, "//zipcode", xmlValue)
class(rs)
table(rs)
read.file("
")
dir()
read.file("GettingAndCleaningData/data/Quiz1/data2.csv")
?read
?data
read.csv("GettingAndCleaningData/data/Quiz1/data2.csv")
d1 <- read.csv("GettingAndCleaningData/data/Quiz1/data2.csv")
head(d1)
DT <- read.csv("GettingAndCleaningData/data/Quiz1/data2.csv")
library(gdata)
DT$pwgtp15
class(DT$pwgtp15)
table(DT$pwgtp15)
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
DT[,mean(pwgtp15),by=SEX]
sapply(split(DT$pwgtp15,DT$SEX),mean)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
library(data.table)
dir()
dir("GettingAndCleaningData/data/Quiz1")
install.packages("gdata")
library(gdata)
?read.xls
read.xls("GettingAndCleaningData/data/Quiz1/data1.xls")
read.xls("GettingAndCleaningData/data/Quiz1/data1.xlsx")
DT <- read.xls("GettingAndCleaningData/data/Quiz1/data1.xlsx")
dim(DT)
DT[18:23,]
DT[18:23,7:15]
dat <- DT[18:23,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
sum(DT$Zip*DT$Ext,na.rm=T)
DT
DT$Zip
DT
q()
file <- "GettingAndCleaningData/data/Quiz1/data1.xlsx"
dir()
read.xls(file)
library(gdata)
f1 <- "GettingAndCleaningData/data/Quiz1/data1.xlsx"
f1
read.xls(f1)
DT <- read.xls(f1)
library(data.table)
DT
DT[, 7:15]
DT[, 7:20]
DT[,18:23]
DT[51:55,18:23]
DT[7:15,18:23]
DT[18:23, 7:15]
DT[18:23, 7:15]
q()
cube <- function(x, n) { x^3}
cube(3)
cube(,2)
cube(3)
x <- 1:10
if (x>5) { x <- 0}
source('~/.active-rstudio-document')
z <- 10
f(3)
x <- 5
y <- if (x<3) {NA} else {10}
y
[1:10] == [1:10]
1:10 == 1:10
if (1:10 == 1:10) {print("yes")}
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url, destfile="test.csv")
download.file(url, destfile="test.csv", method="curl")
acs <- read.csv("test.csv")
install.package("sqldf")
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
?nchar
contact <- read.table("/var/folders/gb/tlgtwv5x6nb04gxdgqgfpbg9xg_dzb/T//RtmpXHZ3kH/data282c67c3c26e", quote="\"")
View(contact)
download.file("http://biostat.jhsph.edu/~jleek/contact.html", destfile="contact.html", method="curl")
readLines("contact.html", -1)
lines <- readLines("contact.html", -1)
lines
?nchar
nchar(lines)
nchar(lines)
(nchar(lines))[c(10,20,30,100)]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile = "data2.txt", method = "curl")
head(read.file("data2.txt"))
head(read("data2.txt"))
?read
?read.csv
head(read.table("data2.txt"))
head("data2.txt")
lines2 <- readLines("data2.txt", -1)
lines2
?colnames
colnames(lines2)
head(lines2)
lines2[1]
lines2[2]
lines2[4:]
lines2[4:-1]
dim(lines2)
summary(lines2)
lines2
lines2[4:1258]
lines3 <- lines2[4:1258]
colnames(lines3)
head(lines3)
lines3 <- lines2[5:1258]
lines3
head(lines3)
lines3[1]
strsplit(lines3, " ")
strsplit(lines3)
strsplit(lines3, " ")
strsplit(lines3, " ", fixed = FLASE)
strsplit(lines3, " ", fixed = FALSE)
lines3
strsplit(lines3, "     ", fixed = FALSE)
dat <- strsplit(lines3, "     ", fixed = FALSE)
dat
dat[,1]
dim(dat)
summary(dat)
dat
dat[1254]
dat[1]
dat[1,1]
dat[1][1]
dat[1][1][1]
(dat[1][1])
(dat[1][1])[4]
(dat[1][1])
dat[1][1][1]
dat[1][1][1][1]
dat
dat[1254]
class(dat[1254])
as.vector(dat[1])
as.vector(dat[1])[3]
as.vector(dat[1])
dat[1254]
dat[1254,1]
dat[1254,0]
dat[1254]
dat[c(1254,0)]
dat[c(1254,1)]
dat[c(1254,2)]
dat[c(1,)]
dat[c(1,2)]
dat[c(1,1)]
dat[1]
dat[1]
dat[2]
head(dat)
dat
dat[,1]
dat[0,1]
dat[1,1]
dat[1]
subset(dat, dat[1])
subset(dat, col(dat) == 4)
q()
setwd("~/Projects/slidify-hw")
library(devtools)
library(slidify)
publish(user="ramesh612", repo="slidify-hw", repo='github')
author("index.Rmd")
publish(user="ramesh612", repo="slidify-hw", repo='github')
author("slidify-hw")
slidify("index.Rmd")
publish(user="ramesh612", repo="slidify-hw", repo='github')
publish(user="ramesh612", repo="slidify-hw", repo='github')
getwd()
library(devtools)
library(slidify)
slidify("index.Rmd")
getwd()
setwd("~/Projects/slidify-hw/slidify-hw")
slidify("index.Rmd")
publish(user="ramesh612", repo="slidify-hw", repo='github')
publish(user="ramesh612", repo="slidify-hw", repo='github')
setwd("~/Projects/slidify-hw/")
setwd("~/Projects/")
publish(user="ramesh612", repo="slidify-hw", repo='github')
setwd("~/Projects/slidify-hw/")
publish(user="ramesh612", repo="slidify-hw", repo='github')
q()
